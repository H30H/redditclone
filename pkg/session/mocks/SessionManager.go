// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import http "net/http"
import mock "github.com/stretchr/testify/mock"

import zap "go.uber.org/zap"

// SessionManager is an autogenerated mock type for the SessionManager type
type SessionManager struct {
	mock.Mock
}

// AddAuth provides a mock function with given fields: w
func (_m *SessionManager) AddAuth(w http.ResponseWriter) error {
	ret := _m.Called(w)

	var r0 error
	if rf, ok := ret.Get(0).(func(http.ResponseWriter) error); ok {
		r0 = rf(w)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CheckAllTimes provides a mock function with given fields: logger
func (_m *SessionManager) CheckAllTimes(logger *zap.SugaredLogger) error {
	ret := _m.Called(logger)

	var r0 error
	if rf, ok := ret.Get(0).(func(*zap.SugaredLogger) error); ok {
		r0 = rf(logger)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CheckAuth provides a mock function with given fields: r
func (_m *SessionManager) CheckAuth(r *http.Request) error {
	ret := _m.Called(r)

	var r0 error
	if rf, ok := ret.Get(0).(func(*http.Request) error); ok {
		r0 = rf(r)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Close provides a mock function with given fields:
func (_m *SessionManager) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateAuth provides a mock function with given fields: w, r
func (_m *SessionManager) UpdateAuth(w http.ResponseWriter, r *http.Request) error {
	ret := _m.Called(w, r)

	var r0 error
	if rf, ok := ret.Get(0).(func(http.ResponseWriter, *http.Request) error); ok {
		r0 = rf(w, r)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
